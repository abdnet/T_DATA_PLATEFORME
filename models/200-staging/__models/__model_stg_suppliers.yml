version: 2     
models:
  - name: stg_suppliers
    description: One record per supplier. Includes information about suppliers.
    data_tests:
      - dbt_utils.equal_rowcount:
          compare_model: ref('raw_suppliers')
          name: QUALITY_DIM_COMPLETENESS_SUPPLIERS
          config:
            severity: warn

    columns:
      - name: SUPPLIER_ID
        description: "Primary key of the suppliers table."
        data_tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: VARCHAR
              name: QUALITY_DIM_VALIDITY_SUPPLIERS_ID
      
      - name: NAME
        description: "Supplier's name"
        data_tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: VARCHAR
              name: QUALITY_DIM_VALIDITY_SUPPLIERS_NAME
          - dbt_expectations.expect_column_value_lengths_to_be_between:
              max_value: 100 # (Optional)
              strictly: false # (Optional. Default is 'false'. Adds an 'or equal to' to the comparison operator for min/max)
              name: QUALITY_DIM_CONFORMITY_SUPPLIERS_NAME

      - name: CONTACT_NAME
        description: "Supplier's contact_name"
        data_tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: VARCHAR
              name: QUALITY_DIM_VALIDITY_SUPPLIERS_CONTACT_NAME
          - dbt_expectations.expect_column_value_lengths_to_be_between:
              max_value: 100 # (Optional)
              strictly: false # (Optional. Default is 'false'. Adds an 'or equal to' to the comparison operator for min/max)
              name: QUALITY_DIM_CONFORMITY_SUPPLIERS_CONTACT_NAME       
      
      - name: PHONE
        description: "Phone of the supplier."
        data_tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: VARCHAR
              name: QUALITY_DIM_VALIDITY_SUPPLIERS_PHONE
      
      - name: EMAIL
        description: "Supplier's email address"
        data_tests:
          - dbt_expectations.expect_column_values_to_match_regex:
              regex: '^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$'
              name: QUALITY_DIM_VALIDITY_SUPPLIERS_EMAIL
      
      - name: ADRESS
        description: "ADDRESS of the supplier."
        data_tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: VARCHAR
              name: QUALITY_DIM_VALIDITY_SUPPLIERS_ADRESS

      - name: COUNTRY
        description: "Supplier's country"

      - name: REGION
        description: "Supplier's region"

      - name: CITY
        description: "Supplier's city"
      
      - name: POSTAL_CODE
        description: "Supplier's postal code"
      
      - name: UPLOADED_AT
        description: "Timestamp when the record was uploaded"
        data_tests:
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: [date, datetime, TIMESTAMP_NTZ]
              name: QUALITY_DIM_VALIDITY_SUPPLIERS_UPLOADED_AT
          - dbt_utils.expression_is_true:
              name: QUALITY_CONSISTENCY_SUPPLIERS_UPLOADED_AT
              expression: "<= UPDATED_AT"
              config:
                severity: error
                error_if: ">10"
                warn_if: ">2"

      - name: UPDATED_AT  
        description: "Timestamp when the record was updated"
        data_tests:
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: [date, datetime, TIMESTAMP_NTZ]
              name: QUALITY_DIM_VALIDITY_SUPPLIERS_UPDATED_AT
          - dbt_utils.expression_is_true:
              name: QUALITY_CONSISTENCY_SUPPLIERS_UPDATED_AT
              expression: ">= UPLOADED_AT"
              config:
                severity: error
                error_if: ">10"
                warn_if: ">2"

          
