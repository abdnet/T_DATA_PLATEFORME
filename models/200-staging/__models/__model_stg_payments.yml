version: 2     
models:
  - name: stg_payments
    description: One record per payment.
    data_tests:
      - dbt_utils.equal_rowcount:
          compare_model: ref('raw_payments')
          name: QUALITY_DIM_COMPLETENESS_PAYMENTS
          config:
            severity: warn

    columns:
      - name: PAYMENT_ID
        description: Primary key of the payment table
        data_tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: VARCHAR
              name: QUALITY_DIM_VALIDITY_PAYMENT_ID

      - name: ORDER_ID
        description: Foreign key referencing the payment associated with the order
        data_tests:
          - relationships:
              to: ref('stg_orders')
              field: ORDER_ID
              name: QUALITY_DIM_INTEGRITY_ORDERS_Â¨PAYMENTS
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: VARCHAR
              name: QUALITY_DIM_VALIDITY_ORDER_ID
              
      - name: PAYMENT_AMOUNT
        description: The amount of the payment
        data_tests:
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: [DECIMAL, FLOAT, NUMBER]
              name: QUALITY_DIM_VALIDITY_PAYMENTS_AMOUNT
          - dbt_utils.expression_is_true:
              name: QUALITY_CONSISTENCY_PAYMENTS_AMOUNT
              expression: "> 0"
              config:
                severity: error
                error_if: ">10"
                warn_if: ">2"

      - name: PAYMENT_METHOD
        description: The method of payment (e.g., credit card, PayPal)
        data_tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: VARCHAR
              name: QUALITY_DIM_VALIDITY_PAYMENT_METHOD  
          - dbt_expectations.expect_column_value_lengths_to_be_between:
              max_value: 70 # (Optional)
              strictly: false # (Optional. Default is 'false'. Adds an 'or equal to' to the comparison operator for min/max)
              name: QUALITY_DIM_CONFORMITY_PAYMENT_METHOD        

      - name: PAYMENT_STATUS
        description: The status of the payment (e.g., pending, completed, failed)
        data_tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: VARCHAR
              name: QUALITY_DIM_VALIDITY_PAYMENTS_STATUS
          - dbt_expectations.expect_column_values_to_be_in_set:
              value_set: ['PENDING','REFUNDED','COMPLETED', 'FAILED']
              name: QUALITY_DIM_CONFORMITY_PAYMENTS_STATUS        
      
      - name: TRANSACTION_ID
        description: The transaction ID from the payment gateway
        data_tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: VARCHAR
              name: QUALITY_DIM_VALIDITY_PAYMENT_TRANSACTION_ID  
          - dbt_expectations.expect_column_value_lengths_to_be_between:
              max_value: 255 # (Optional)
              strictly: false # (Optional. Default is 'false'. Adds an 'or equal to' to the comparison operator for min/max)
              name: QUALITY_DIM_CONFORMITY_PAYMENT_TRANSACTION_ID   

      - name: CREATED_AT
        description: The timestamp when the payment was created
        data_tests:
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: [date, datetime, TIMESTAMP_NTZ]
              name: QUALITY_DIM_VALIDITY_PAYMENTS_CREATED_AT             
      
      - name: PAYMENT_UPDATED_AT  
        description: The timestamp when the payment was last updated
        data_tests:
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: [date, datetime, TIMESTAMP_NTZ]
              name: QUALITY_DIM_VALIDITY_PAYMENTS_UPDATED_AT
          - dbt_utils.expression_is_true:
              name: QUALITY_CONSISTENCY_PAYMENTS_UPDATED_AT
              expression: ">= CREATED_AT"
              config:
                severity: warn
                warn_if: ">100"

      - name: UPLOADED_AT
        description: "Timestamp when the record was uploaded"
        data_tests:
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: [date, datetime, TIMESTAMP_NTZ]
              name: QUALITY_DIM_VALIDITY_PAYMENTS_UPLOADED_AT
          - dbt_utils.expression_is_true:
              name: QUALITY_CONSISTENCY_PAYMENTS_UPLOADED_AT
              expression: "<= UPDATED_AT"
              config:
                severity: error
                error_if: ">10"
                warn_if: ">2"

      - name: UPDATED_AT  
        description: Timestamp when the record was updated
        data_tests:
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: [date, datetime, TIMESTAMP_NTZ]
              name: QUALITY_DIM_VALIDITY_CUSTOMERS_UPDATED_AT
          - dbt_utils.expression_is_true:
              name: QUALITY_CONSISTENCY_CUSTOMERS_UPDATED_AT
              expression: ">= UPLOADED_AT"
              config:
                severity: error
                error_if: ">10"
                warn_if: ">2"



    