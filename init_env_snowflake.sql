-- ===========================================================
-- Définir la variable d'environnement
-- ===========================================================
-- Utilisez 'DEV', 'PROD', ou 'TST' comme valeur pour ENV
SET ENV = 'TST'; -- Changez cette valeur pour 'PROD' ou 'TST' selon l'environnement souhaité

-- ===========================================================
-- Définir les variables avec concaténation
-- ===========================================================
SET ROLE_RW_ALL = CONCAT('RL_DPF_RW_ALL_', $ENV);
SET ROLE_ALL_USR = CONCAT('RL_DPF_ALL_USR','');
SET USER_TF_SRV = CONCAT('USR_DPF_TF_SRV_', $ENV);
SET USER_DBT_SRV = CONCAT('USR_DPF_DBT_SRV_', $ENV);
SET DB_NAME = CONCAT('marketing_', $ENV);
SET CURRENT_USER_NAME = CURRENT_USER();
SET TRANSAC_BD = CONCAT('MARKETING_TRANSAC_BD','');

-- ===========================================================
-- Suppression des rôles et utilisateurs selon l'environnement
-- ===========================================================
-- Suppression des rôles
DROP ROLE IF EXISTS IDENTIFIER($ROLE_RW_ALL);
DROP ROLE IF EXISTS IDENTIFIER($ROLE_ALL_USR);

-- Suppression des utilisateurs
DROP USER IF EXISTS IDENTIFIER($USER_TF_SRV);
DROP USER IF EXISTS IDENTIFIER($USER_DBT_SRV);

-- Suppression de la base de données
DROP DATABASE IF EXISTS IDENTIFIER($DB_NAME);

-- ===========================================================
-- Création des rôles et utilisateurs selon l'environnement
-- ===========================================================
-- Création des rôles
CREATE ROLE IF NOT EXISTS IDENTIFIER($ROLE_RW_ALL);
CREATE ROLE IF NOT EXISTS IDENTIFIER($ROLE_ALL_USR);

-- Création des utilisateurs
CREATE USER IF NOT EXISTS IDENTIFIER($USER_TF_SRV) PASSWORD = 'changeme';
CREATE USER IF NOT EXISTS USR_DPF_ADM_ALL_AI PASSWORD = 'changeme';
CREATE USER IF NOT EXISTS USR_DPF_ADM_ALL_DJB PASSWORD = 'changeme';

CREATE USER IF NOT EXISTS IDENTIFIER($USER_DBT_SRV)
  PASSWORD = 'changeme'
  RSA_PUBLIC_KEY = 'MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAmDPMtOeuOyhXtU0ykloW
qML3P6LZwick9HVSgt/xAZwEGXDGXyE0osIVdA/jsVFX9DZkm7LAlKFxqj80/vyA
p6kL7VIt3x1KZjpkoMYzaHtSq++2vmKklI2lRQdE+i57fzLRMbKrIaVYIk7+SDye
+uU8Xz/CaJ1KTYCk6+RRS27ZO7TgBDA68LfOW+Sez9earmh16zG7Wic2rnJa9Yaz
XrbDYw0beYOmxorbV1m2isf528f6NJ42TMCkk7srMUx1cC1Eh6cu2eKEUW+Px+hc
cQPkdJrfWxrGDJBnaRZGz/3c4InvHLteUJKT0L/KgyL6IhT6LUovyrhNljGkFF2p
TwIDAQAB';


-- Attribution des rôles
-- GRANT CREATE DATABASE ON ACCOUNT TO ROLE IDENTIFIER($ROLE_RW_ALL);

GRANT ROLE IDENTIFIER($ROLE_ALL_USR) TO USER IDENTIFIER($USER_TF_SRV);
GRANT ROLE IDENTIFIER($ROLE_ALL_USR) TO USER IDENTIFIER($USER_DBT_SRV);

-- Utiliser le rôle approprié pour la création de la base de données
-- USE ROLE IDENTIFIER($ROLE_RW_ALL);

-- Création de la base de données et des schémas
CREATE DATABASE IF NOT EXISTS MARKETING_TRANSAC_BD;
CREATE DATABASE IF NOT EXISTS IDENTIFIER($DB_NAME);
USE DATABASE IDENTIFIER($DB_NAME);
CREATE SCHEMA IF NOT EXISTS DPF_SCH_RAW;
CREATE SCHEMA IF NOT EXISTS DPF_SCH_STG;
CREATE SCHEMA IF NOT EXISTS DPF_SCH_IN_WH;
CREATE SCHEMA IF NOT EXISTS DPF_SCH_WH;
CREATE SCHEMA IF NOT EXISTS DPF_SCH_MART;
CREATE SCHEMA IF NOT EXISTS DPF_SCH_SNAPSHOT;

-- Attribution des rôles sur la base transactionnel
USE DATABASE IDENTIFIER($TRANSAC_BD);

GRANT USAGE ON DATABASE  IDENTIFIER($TRANSAC_BD) TO ROLE IDENTIFIER($ROLE_RW_ALL);
GRANT USAGE ON ALL SCHEMAS IN DATABASE IDENTIFIER($TRANSAC_BD) TO ROLE IDENTIFIER($ROLE_RW_ALL);
GRANT SELECT ON ALL TABLES IN SCHEMA PUBLIC TO ROLE IDENTIFIER($ROLE_RW_ALL) ;

-- Attribution des privilèges
USE DATABASE IDENTIFIER($DB_NAME);



-- Tables dans chaque schéma
GRANT OWNERSHIP ON ALL TABLES IN SCHEMA DPF_SCH_RAW TO ROLE IDENTIFIER($ROLE_RW_ALL) REVOKE CURRENT GRANTS;
GRANT OWNERSHIP ON ALL TABLES IN SCHEMA DPF_SCH_STG TO ROLE IDENTIFIER($ROLE_RW_ALL) REVOKE CURRENT GRANTS;
GRANT OWNERSHIP ON ALL TABLES IN SCHEMA DPF_SCH_IN_WH TO ROLE IDENTIFIER($ROLE_RW_ALL) REVOKE CURRENT GRANTS;
GRANT OWNERSHIP ON ALL TABLES IN SCHEMA DPF_SCH_WH TO ROLE IDENTIFIER($ROLE_RW_ALL) REVOKE CURRENT GRANTS;
GRANT OWNERSHIP ON ALL TABLES IN SCHEMA DPF_SCH_MART TO ROLE IDENTIFIER($ROLE_RW_ALL) REVOKE CURRENT GRANTS;
GRANT OWNERSHIP ON ALL TABLES IN SCHEMA DPF_SCH_SNAPSHOT TO ROLE IDENTIFIER($ROLE_RW_ALL) REVOKE CURRENT GRANTS;

GRANT OWNERSHIP ON DATABASE IDENTIFIER($DB_NAME) TO ROLE IDENTIFIER($ROLE_RW_ALL) REVOKE CURRENT GRANTS;

GRANT OWNERSHIP ON ALL SCHEMAS IN DATABASE IDENTIFIER($DB_NAME) TO ROLE IDENTIFIER($ROLE_RW_ALL) REVOKE CURRENT GRANTS;

-- Attribution des rôles aux utilisateurs
GRANT ROLE IDENTIFIER($ROLE_RW_ALL) TO USER IDENTIFIER($USER_TF_SRV);
GRANT ROLE IDENTIFIER($ROLE_RW_ALL) TO USER IDENTIFIER($USER_DBT_SRV);
GRANT ROLE IDENTIFIER($ROLE_RW_ALL) TO USER IDENTIFIER($CURRENT_USER_NAME);

-- Aggregation des roles
GRANT ROLE IDENTIFIER($ROLE_RW_ALL) TO ROLE IDENTIFIER($ROLE_ALL_USR);
GRANT ROLE IDENTIFIER($ROLE_RW_ALL) TO USER IDENTIFIER($USER_TF_SRV);
GRANT ROLE IDENTIFIER($ROLE_RW_ALL) TO USER IDENTIFIER($USER_DBT_SRV);
GRANT ROLE IDENTIFIER($ROLE_RW_ALL) TO USER IDENTIFIER($CURRENT_USER_NAME);
GRANT ROLE IDENTIFIER($ROLE_ALL_USR) TO USER IDENTIFIER($CURRENT_USER_NAME);
GRANT ROLE IDENTIFIER($ROLE_ALL_USR) TO USER USR_DPF_ADM_ALL_AI;
GRANT ROLE IDENTIFIER($ROLE_ALL_USR) TO USER USR_DPF_ADM_ALL_DJB;
GRANT ROLE ACCOUNTADMIN TO USER USR_DPF_ADM_ALL_AI;
GRANT ROLE ACCOUNTADMIN TO USER USR_DPF_ADM_ALL_DJB;
-- Attribution de WH au role

GRANT USAGE ON WAREHOUSE COMPUTE_WH TO ROLE IDENTIFIER($ROLE_RW_ALL);
